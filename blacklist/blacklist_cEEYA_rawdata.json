{
  "name": "blacklist",
  "permissions": "NONE",
  "restriction": "1",
  "_id": "VoipE",
  "actions": [
    {
      "code": "const mods = this.getMods();\nconst db = mods.require('quick.db');\nconst DiscordJS = require('discord.js');\n\nconst p = (server && server.tag) || Files.data.settings.tag;\nconst prefix = (msg.content.startsWith(String(me))) ? String(me) : p;\nconst text = msg.content.slice(prefix.length)\n    .trim()\n    .split(/ +/g);\ntext.shift();\n\n(async () => {\n    let mem;\n    let type;\n    const usage = `${p}blacklist <add | remove | check> <user> <reason>`;\n\n    if (!text || text.length < 1) {\n        return msg.channel.send(`Incorrect Usage: ${usage}`);\n    } else if (text[0] && text[1]) {\n        if (!['add', 'remove', 'check'].includes(text[0].toLowerCase())) {\n            return msg.channel.send(`Incorrect Usage: ${usage}`);\n        } else {\n            type = text[0].toLowerCase();\n        }\n    } else if (text[0]) {\n        mem = msg.mentions.members.first() || server.members.cache.find(m => m.id === `${text[0]}`) ||\n            server.members.cache.find(m => m.displayName.toUpperCase() === `${text[0].toUpperCase()}`) ||\n            server.members.cache.find(m => m.user.username.toUpperCase() === `${text[0].toUpperCase()}`) ||\n            server.members.cache.find(m => m.user.username.toLowerCase().includes(`${text[0].toLowerCase()}`)) ||\n            server.members.cache.find(m => m.user.tag === `${text[0]}`);\n\n        type = 'check';\n\n        if (!mem) return msg.channel.send(`Incorrect Usage: ${usage}`);\n    }\n\n    if (!mem && text[1]) {\n        mem = msg.mentions.members.first() || server.members.cache.find(m => m.id === `${text[1]}`) ||\n            server.members.cache.find(m => m.displayName.toUpperCase() === `${text[1].toUpperCase()}`) ||\n            server.members.cache.find(m => m.user.username.toUpperCase() === `${text[1].toUpperCase()}`) ||\n            server.members.cache.find(m => m.user.username.toLowerCase().includes(`${text[1].toLowerCase()}`)) ||\n            server.members.cache.find(m => m.user.tag === `${text[1]}`);\n\n        if (!mem) return msg.channel.send(`Incorrect Usage: ${usage} \\nPlease provide a valid server member.`);\n    }\n\n    text.shift();\n    text.shift();\n    const reason = text.join(' ') || false;\n\n    const blacklist = db.get(`servers.${server.id}.users.${mem.id}.blacklist`);\n    if (type === 'add') { // Add member to blacklist\n        if (blacklist) {\n            return msg.channel.send('That user is already blacklisted.');\n        }\n        if (!reason) return msg.channel.send(`Incorrect Usage: ${usage}`);\n\n        db.set(`servers.${server.id}.users.${mem.id}.blacklist`, true);\n        db.set(`servers.${server.id}.users.${mem.id}.blacklistReason`, reason);\n\n        const em = new DiscordJS.MessageEmbed()\n            .setTitle(`${mem.user.tag} has been added to the blacklist.`)\n            .setColor('#0099CC')\n            .addField('Reason:', reason, true)\n            .addField('Member:', `${mem.displayName} \\n(${mem.id})`, true)\n            .addField('Server:', `${server.name} \\n(${server.id})`, true)\n            .setTimestamp();\n        msg.channel.send(em);\n        mem.send(em);\n    } else if (type === 'remove') { // remove member from blacklist\n        if (!blacklist) {\n            return msg.channel.send('That user is not blacklisted');\n        }\n        if (!reason) return msg.channel.send(`Incorrect Usage: ${usage}`);\n\n        db.set(`servers.${server.id}.users.${mem.id}.blacklist`, false);\n        db.set(`servers.${server.id}.users.${mem.id}.blacklistReason`, reason);\n\n        const em = new DiscordJS.MessageEmbed()\n            .setTitle(`${mem.user.tag} has been removed to the blacklist.`)\n            .setColor('#0099CC')\n            .addField('Reason:', reason, true)\n            .addField('Member:', `${mem.displayName} \\n(${mem.id})`, true)\n            .addField('Server:', `${server.name} \\n(${server.id})`, true)\n            .setTimestamp();\n        msg.channel.send(em);\n        mem.send(em);\n    } else if (type === 'check') { // check if member is blacklisted\n        const reason = db.get(`servers.${server.id}.users.${mem.id}.blacklistReason`) || false;\n        let bl;\n        if (!blacklist) { bl = 'is not'; } else { bl = 'is'; }\n        const em = new DiscordJS.MessageEmbed();\n        em.setTitle(`${mem.user.tag} blacklist check`);\n        em.setColor('#0099CC');\n        em.addField('Member:', `${mem.user.tag} (${mem.id})`, true);\n        em.addField('Is Blacklisted?', `That user ${bl} blacklisted.`);\n        if (reason) { em.addField('reason', reason, true); }\n        em.setTimestamp();\n        return msg.channel.send(em);\n    } else { // send error\n        return msg.channel.send('Sorry something went wrong, please try again later.');\n    }\n})()\n",
      "behavior": "0",
      "interpretation": "1",
      "storage": "0",
      "varName": "",
      "VTypeSelect": "0",
      "CVTypeValue": "",
      "name": "Run Script"
    }
  ]
}